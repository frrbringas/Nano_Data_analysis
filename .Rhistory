library(tidyverse)
reads_b1 <- read.delim("../results/2_trimmed_output/Chr8_1110_MNAse_distribution.txt", header = F, sep = "")
head(reads_b1)
sum(reads_b1$V1)
ggplot(reads_b1, aes(x=V2, y=V1)) +
geom_line() +
labs(x= "Length (bp)", y= "Number of reads")
reads_b1 %>%
filter(V2<3200) %>%
ggplot(aes(x=V2, y=V1)) +
scale_x_continuous(name= "Length (bp)", breaks = seq(0,3200, by=150)) +
scale_y_continuous(name= "Number of reads") +
geom_line()
reads_b1 %>%
filter(V2<600) %>%
ggplot(aes(x=V2, y=V1)) +
scale_x_continuous(name= "Length (bp)", breaks = seq(0,500, by=25)) +
scale_y_continuous(name= "Number of reads") +
geom_line()
reads_b1 %>%
filter(V2>100) %>%
filter(V2<200) %>%
ggplot(aes(x=V2, y=V1)) +
scale_x_continuous(name= "Length (bp)", breaks = seq(0,500, by=25)) +
scale_y_continuous(name= "Number of reads") +
geom_line()
library(tidyverse)
library(nucleR)
library(IRanges)
library(GenomicAlignments)
library(GenomicRanges)
barcode01 <- readBAM("../results/3_aligned_sequences/aligned_bam/filtered_aligned_sort.bam", type = "single")
head(barcode01)
df_reference <- read_csv("../annotation/pFB2_WA45_Annotations.csv", skip_empty_rows = TRUE)
head(df_reference)
df_reference <- df_reference %>%
na.omit() %>%
mutate(middle = (end - start)/2 + start)
df_reference$Type_coverage <- factor(df_reference$Type_coverage, levels=c("Reference", "barcode01","barcode01_Trim"))
head(df_reference)
summary(df_reference)
readsBAM_barcode01 <- barcode01[end(barcode01) <= 4583]
preads_barcode01_orig <- processReads(barcode01, type = "single")
preads_barcode01_trim<- processReads(barcode01, type = "single", trim = 50)
cover_barcode01_orig <- coverage.rpm(preads_barcode01_orig)
cover_barcode01_trim <- coverage.rpm(preads_barcode01_trim)
t1_barcode01_orig <- as.vector(cover_barcode01_orig[[1]])
t1_barcode01_trim <- as.vector(cover_barcode01_trim[[1]])
t1_barcode01_orig <- (t1_barcode01_orig-min(t1_barcode01_orig)) / max(t1_barcode01_orig-min(t1_barcode01_orig)) #Nornalization
t1_barcode01_trim <- (t1_barcode01_trim-min(t1_barcode01_trim)) / max(t1_barcode01_trim-min(t1_barcode01_trim)) #Nornalization
df_barcode01_orig <-data.frame("Position" = seq_along(t1_barcode01_orig), "Normal_Coverage" = t1_barcode01_orig, Type_coverage = "barcode01")
head(df_barcode01_orig)
df_barcode01_trim <-data.frame("Position" = seq_along(t1_barcode01_trim), "Normal_Coverage" = t1_barcode01_trim, Type_coverage = "barcode01_Trim")
#create an objet with three data frames
plot_combine_orig <- rbind((df_barcode01_orig), (df_barcode01_trim))
unique(plot_combine_orig$Type_coverage)
plot_combine_orig$Type_coverage <- factor(plot_combine_orig$Type_coverage, levels=c("Reference","barcode01", "barcode01_Trim"))
head(plot_combine_orig)
MNAse_seq_Plot_orig <- ggplot() +
geom_area(data = plot_combine_orig, aes(x = Position,
y = Normal_Coverage,
color = Type_coverage,
fill = Type_coverage),
alpha = 0.8,
position = "identity") +
geom_vline(xintercept = 2295,
color = "darkred",
linetype = "dashed") +
geom_rect(data = df_reference,
mapping = aes(xmin = start,
xmax = end,
ymin = 0.0,
ymax = 0.1,
fill = "black",
color = "black",
),
alpha=0.5) +
geom_text(data= df_reference,
mapping = aes(x = middle,
y = 0.5,
label = Name
),
size = 3, ) +
scale_fill_manual(values = c("Reference"="black", "barcode01"="#1da2d8", "barcode01_Trim"="#f37736")) +
scale_color_manual(values= c("Reference"="black", "barcode01"="#1da2d8", "barcode01_Trim"="#f37736")) +
scale_x_continuous(limits = c(0, 4583), breaks = seq(0, 4583, 1000)) +
facet_grid(rows = vars(Type_coverage)) +
theme(legend.position = "none",
axis.ticks = element_line(colour = "black", linewidth = 0.2),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggsave(MNAse_seq_Plot_orig, filename = "../results/4_Plots/MNase_seq_Plot_pFB2_WA081.svg")
MNAse_seq_Plot_orig
library(tidyverse)
setwd("/Users/bringaf/Documents/Postdoc/Diffley/bioinformatics_programming/Github/NSONAR")
d_BC01 <- read_csv("Nucleosome_template_v2.csv")
d_BC01 <- read_csv("Nucleosome_template_v2.csv", delim =" ")
d_BC01 <- read_csv("Nucleosome_template_v2.csv")
View(d_BC01)
library(readr)
d_BC01 <- read_csv("Nucleosome_template_v2.csv")
d_BC01 <- read_csv("Nucleosome_template_v2.csv")
BC01_Nucleosomes <- read_csv("Nucleosome_template_v2.csv")
head(BC01_Nucleosomes)
View(d_BC01)
View(BC01_Nucleosomes)
View(BC01_Nucleosomes)
library(tidyverse)
library(readr)
BC01_Nucleosomes <- read_csv("Nucleosome_template_v2.csv")
head(BC01_Nucleosomes)
#For leading
BC01_Nucleosomes %>%
filter(StrandStatus == "Lag") %>%
nrow()
unique(BC01_Nucleosomes$StrandStatus)
#For leading
T_Lead_Nucleosomes <- BC01_Nucleosomes %>%
filter(StrandStatus == "Lag") %>%
nrow()
T_Lead_Nucleosomes
T_nucleosomes <- BC01_Nucleosomes %>%
nrow()
T_nucleosomes
T_n <- BC01_Nucleosomes %>%
nrow()
T_n
T_n_Leading <- BC01_Nucleosomes %>%
filter(Mapping_y == "pFB2" & StrandStatus == "Lead") %>%
nrow()
T_n_Leading
unique(BC01_Nucleosomes)
unique(BC01_Nucleosomes$StrandStatus)
T_n_Leading <- BC01_Nucleosomes %>%
filter(Mapping_y == "pFB2" & StrandStatus == "Lead") %>%
nrow()
T_n_Leading
unique(BC01_Nucleosomes$Mapping_y & BC01_Nucleosomes$StrandStatus)
unique(BC01_Nucleosomes$Mapping_y)
unique(BC01_Nucleosomes$Mapping_y)
unique(BC01_Nucleosomes$StrandStatus)
T_n_Leading <- BC01_Nucleosomes %>%
filter(StrandStatus == "Lead") %>%
nrow()
T_n_Leading
T_n_lagging <- BC01_Nucleosomes %>%
filter(StandStatus == "Lag") %>%
nrow()
T_n_lagging <- BC01_Nucleosomes %>%
filter(StrandStatus == "Lag") %>%
nrow()
T_n_lagging
BC01_Nucleosomes <- read_delim("Nucleosome_original.csv")
library(tidyverse)
library(readr)
BC01_Nucleosomes <- read_delim("Nucleosome_original.csv")
head(BC01_Nucleosomes)
BC01_Nucleosomes %>%
count(StrandStatus)
T_n <- BC01_Nucleosomes %>%
nrow()
T_n
BC01_Nucleosomes %>%
count(StrandStatus) %>%
mutate(percentage = n/T_n)
BC01_Nucleosomes %>%
count(StrandStatus) %>%
mutate(percentage = n/T_n * 100)
T_n_Leadlag <-BC01_Nucleosomes %>%
count(StrandStatus) %>%
mutate(percentage = n/T_n * 100)
T_n_Leadlag
ggplot(T_n_Leadlag, aes(x = StrandStatus, y= percentage, color = StrandStatus)) +
geom_bar()
ggplot(T_n_Leadlag, aes(x = StrandStatus, y= percentage, color = StrandStatus)) +
geom_bar(stat = "identity")
ggplot(T_n_Leadlag, aes(x = StrandStatus, y= percentage, fill = StrandStatus)) +
geom_bar(stat = "identity")
View(BC01_Nucleosomes)
